/*
 * Importa o spring boot gradle plugin
 */
buildscript {
    ext {
        kotlinVersion = '1.1.2'
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

group = 'eteg'

/*
 * Aplica outros plugins
 */
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

/*
 * Configura o artefato gerado pela build.
 */
jar {
    baseName = 'opbp'
    version = '0.0.1'
}

bootRun {
    args = ['--spring.profiles.active=dev']
}

/*
 * Tasks
 */
task buildDocker(type: Copy) {
    from 'src/main/docker/Dockerfile'
    into 'build/libs'
}
build.finalizedBy(buildDocker)

task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                try {
                    configuration.resolve()
                }
                catch (Exception e) {
                    e.printStackTrace()
                }
            }
            subProject.configurations.each { configuration ->
                try {
                    configuration.resolve()
                }
                catch (Exception e) {
                    e.printStackTrace()
                }
            }
        }
    }
}

/*
 * Configura os repositórios
 */
repositories {
    mavenCentral()
}

/*
 * Configura o código fonte
 */
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile project(':opbp-frontend')
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    runtime 'com.h2database:h2'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}